'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* globals window */

var Active = function (_React$Component) {
  _inherits(Active, _React$Component);

  function Active(_ref) {
    var active = _ref.active;

    _classCallCheck(this, Active);

    var _this = _possibleConstructorReturn(this, (Active.__proto__ || Object.getPrototypeOf(Active)).call(this));

    _this.state = { active: active };
    _this.listenToOuterClick = _this.listenToOuterClick.bind(_this);
    _this.setActive = _this.setActive.bind(_this);
    return _this;
  }

  _createClass(Active, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.inactiveOnGlobalClick !== false) window.addEventListener('click', this.listenToOuterClick);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.props.inactiveOnGlobalClick !== false) window.removeEventListener('click', this.listenToOuterClick);
    }
  }, {
    key: 'listenToOuterClick',
    value: function listenToOuterClick(e) {
      if (!this.refs.component) return;
      if (!this.refs.component.contains(e.target) && this.state.active) this.setState({ active: false });
    }
  }, {
    key: 'setActive',
    value: function setActive(active) {
      if (active != this.state.active) this.setState({ active: active });
    }
  }, {
    key: 'render',
    value: function render() {
      var active = this.state.active;
      var _props = this.props;
      var children = _props.children;
      var className = _props.className;
      var activeClassName = _props.activeClassName;

      return _react2.default.createElement(
        'div',
        {
          ref: 'component',
          className: className ? '' + className + (active ? ' ' + activeClassName : '') : null
        },
        children(active, this.setActive)
      );
    }
  }]);

  return Active;
}(_react2.default.Component);

exports.default = Active;